%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 317.000000 128.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.5 (Build 19F101) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 317 128
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 317 128
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin
/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /t put
dup 35 /r put
dup 36 /o put
dup 37 /n put
dup 38 /y put
dup 39 /i put
dup 40 /d put
dup 41 /colon put
dup 42 /space put
dup 43 /I put
dup 44 /N put
dup 45 /T put
dup 46 /E put
dup 47 /G put
dup 48 /R put
dup 49 /comma put
dup 50 /K put
dup 51 /Y put
dup 52 /u put
dup 53 /l put
dup 54 /X put
dup 55 /h put
dup 56 /m put
dup 57 /b put
dup 58 /a put
dup 59 /s put
dup 60 /underscore put
dup 61 /p put
dup 62 /z put
dup 63 /c put
dup 64 /j put
dup 65 /A put
dup 66 /L put
dup 67 /w put
dup 68 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






00010021000004C905BD00070034401A01061E00070204080917171A00FB0203250504FB0619088C5E182B4E10F44DF43CFD3CF44E456544E6003F3F3C4DFD3C3130011521112311213504C9FE11CAFE1105BDAFFAF2050EAF0000000001002A0000053405BD000B00BC4070280136024702570357046703670476027808880186040B270B3702370538086805050203020103251204040508070809072512060506080907080925120A0B0A0201020301251200000B0205080B040301070604030201090A0300080A0604000205080B08090107091A0D0301190C0DB8010CB3218E5E182B2B194EF44D18C4104E19F64D18C411121739003F173C3F3C3C3C1112173901874D2E2B0810C005872E2B0810C00587102B0810C00587102B0810C03130005D015D212309013309013309012301011AF0020EFE13F901770174EDFE130205F7FE7402F102CCFDCE0232FD34FD0F025C0002002A0000054705BD00080009008F402A8804011428042512030203002512010102050802080701030403000207080903090904000B17171A0304B801004009060202050625010807B80100B500190A8E5E182B194E10F44DF43C3918FD3C393D2F1019F4394E456544E6111239182F003F3F3F173C1239392E3C05874D2E2B872E182B4B5279B7050402030800010204877D10C404877D10C43130015D133309013301112311132AE801A601A6E9FDD5C76605BDFD3E02C2FC93FDB00250036D000000010000FF000473FF650003000FB50146000205003C103C002FED3130113521150473FF0065650000030052FFDC04470449000F003B003C00DD40382A30010A100B1B0C1C2733481069096A10073908120C09031B320724091D100C1D3B2B022E293BB73B023B322A2512100705081C2722171CB8018A4023171D1F07271D2E0B021D350B3C073C3C1C1407292AA8241A3E1B291C4A0F2738193D3EBC0197002100B9019600182B2B4EF44DEDF4ED4E10F64DE4FDC412392F003F3FED3FED3FEDED1239111217395D1112392EED2EED01111239111739313043794028363715220001192501360F2100181E1B21001620142101212200370221001A1D1721011521172101002B2B2B01103C2B2B2B2B818181005D015D2416333237363D010E010F0106070615013637363534262322070607233E01333217161511141633323637150E0123222726270E012322263534363713010E724E5F59962168326D62315301B43E150C837A8D3B210AA805F7A3BD767517250C1E112A2C265D2A160937CE7C95BDBA978ACF5A2C49A691151C060E0D1C2F67016C082C182D5C534C2A53C69B484898FD971C220303850C06422340486AB58895A41301E40000020076FFDE042505C20011001E0070402EA607A71CD71C0322080F1E02050000171D0507110A1E1D0B0B14






00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/colon 3 def
/A 4 def
/E 5 def
/G 6 def
/I 7 def
/K 8 def
/L 9 def
/N 10 def
/R 11 def
/S 12 def
/T 13 def
/X 14 def
/Y 15 def
/underscore 16 def
/a 17 def
/b 18 def
/c 19 def
/d 20 def
/h 21 def
/i 22 def
/j 23 def
/k 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/p 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/w 34 def
/y 35 def
/z 36 def
/uni20BE 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4065484 def
currentdict end
currentfile eexec



7254C8B8462D94EE479E2BDE39D18199F2B034630C592D3C0C7EC885AF8EBA14E2A7AAA4A41D3EF2603F7827666A8D8D1AB3847AA959F02E6E8F4DD0840AE0D5107FDD5E83C4DC7AB4BFFF99E35DDA800C73FA44C3B8F42CB2FB420C336DF98DAE23FF8F963DEFB2F455BCD06351F3EED9E3BFDBF8731372552C79EF50140B7DBFF6567E97CBAEF3C0D03FA73A396915A8862F2047CECFBADA1B5C74182DA10F54B807D812EA51388A499FF3F4BDBA856FF1081DAEC6F502C780EB5E60711AE0B3DF59A2ABEBE72EF066A8AA8E7FC7EBAB9AA23B27CC45409E1CC1E18B21399145B746AE499D67348C9C616F5828FE13E82253540E435E2A3BE5C769A5EE58F0FD1717A630D3F8F8120E91294C7C319DF93F725302770C4B55F00F13CE926DE119FC669B725E6A552D5BFA84DF68190CD20B16F00BB9F2257CCD78A2AA57C8FB18A3A2C135B154816E50752EE40108A60A6D2C653D37FAD4C24613574C4B304602F5578E71ABC94733E81899BE94F46063A13BEF2D0A0EF4246C5C45F9387D8A36159F57C45F4B0F166F7C7D08EE5E54825EBAAD5D930025524E062C8E438DAEE98A71BF014FA5A97476B92DF122DF2027888C998DFC5E393879BD15D6A4E29506D72CE6E41FE26C7710194469C1C4AA4E047DBEB192FECA7F4DBFA77FBCAF748413ADFE902636EFCEBC02837F026C1504B10BF914C174335327259EA34BBED30B6F48F4EE5BD3368BC9F6446364F7D467DCF8DA536D593167034A9721D71F949C9BA88C0A843EEF8EC447B9A90443DEDE4ED4072A6601096C7339E60438FCEF75C10CB756E6C589B4703EB396796234763A16A1BE4DD93A9237850D3CBA49353BA0A6D3A228615579BA77F1C99209CDD84F207D00EB757EA6B319553DFFD02E66F8B07424D1D594A7C662B6889E08FEF7AD845B358F9C4594E9BC959B80724F64300F2635C967F2BDB29572EA46019916BA5CFCAEC604D7E6EFE8136D0400B9D646F1823C1B02360B5B0558054225FFB4A153E1E665F8BFE75D88E5CD02CE775133881F16043775DE0C88A835B2442220C2716CCFC755C2AE01DD6ED8A8520AB4A9E81B407DF88FCB56CF7CD0A9090EA2E2EF0B183616BD6A21E1AE3A14BE516C054A7B0A20AEE9D6B50018161770F179BDDE1C0F64DDCD451EDA7688B7E03EE6CBDD5D58707FE27F49147FA81E4929CB07CE1A9359A83DECDCDCDF2FD55C00CDFEB8BB84E629F5258F659B8471ACBA8D02FB3DFD0675223206D45D0BAAFFBC6757422D02B325ED7FD5650C9F35B3BE87FBF15DB8BB24144AD88E4A4C4752498AAB6904F6FD08CE3645F98FE8CBE430874BCC79F69CE267E2388DADD85D6A8491C56A52DD219A01B135063D72C403279BAF63A90D445C42EBD16FBD461037606CD78C261D98608CE16847D96850A6C04CED281E37790DD2174A743BB2E2474D

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 317 128 rc
0 128 m
317 128 l
317 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-35 154 m
389 154 l
389 -72 l
-35 -72 l
h
-35 154 m
f
82 0 0 17 124 45 cm
BI
/Width 246
/Height 51
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcD):q"a^MrS7#"q!.YMJcDGDJcDABJcD):q"a^MrS7#"q!.YMJcDGDJcDABJcD):q"a^MrS7#"q!.YM
JcDGDJcDABJcD):q"a^MrS7#"q!.YMJcDGDJcDABJcD):q"a^MrS7#"q!.YMJcDGDJcDABJcD):q"a^M
rS7#"q!.YMJcDGDJcDABJcD):q"a^MrS7#"q!.YMJcDGDJcG6>n,C3(JcD):q"a^MrS7#"q!.YMJcDGD
JcG6>n,C3(JcD):q"a^MrS7#"q!.YMJcDGDJcG6>n,C3(JcD):q"a^MrS7#"q!.YMJcDGDMuWSNq"jdZ
q"=FVq"sjceGk+"QiHjVq!.h5oA'-+q"]L@U&U&Nq#1!aq"FLUq"OR\q#8eCJcD):q"a^MrS7#"q!.YM
JcDGDMuWSNq"jdZq"=FVq"sjceGk+"QiHjVq!.h5oA'-+q"]L@U&V"iq#:'dq"XXTq!@e>q!%SBq"XX`
eGk+"QiHjVq!.h5oA'-+q"]L@U&V"iq#:'dq"XXTq!@e>q!%SBq"XX`eGk+"QiHjVq!.h5oA'-+q"]L@
U&V"iq#:'dq"XXTq!@e>q!%SBq"XX`eGk+"QiHjVq!.h5oA'-+q"]L@U&VY&q#1!aq"=FNq!%S6ptb`"
pu(r5q"OR_eGk+"QiHjVq!.h5oA'-+q"]L@U&VY&q#1!aq"=FNq!%S6ptb`"pu(r5q"OR_eGk+"QiHjV
q!.h5oA'-+q"]L@U&VY&q#1!aq"=FNq!%S6ptb`"pu(r5q"OR_eGk+"QiHjVq!.h3r7^qtpuM5@Jbc#8
e+re6q"ORTq!\"ApttkupsJl^ps8`bpttl5q"OR_eGk+"QiHjVq!.h3r7^qtpuM5@Jbc#8e+re6q"ORT
q!\"ApttkupsJl^ps8`bpttl5q"OR_eGk+"QiHjVq!.h3r7^qtpuM5@Jbc#8e+re6q"ORTq!\"Apttku
psJl^ps8`bpttl5q"OR_eGk+"QiHjVq!.h2r7UknptGN(Ja/roe*?_mpuM5*ps]#[pqcF3pqZ[Eps/Zg
puqMHq#/_BJcD):q"a^MrRq,%psSrkpuI"kU$C+lq!%S7ptYYnprW<In%AG2pr<*SptGN,q"FL]eGk+"
QiHjVq!.h2r7UknptGN(Ja/roe*?_mpuM5*ps]#[pqcF3pqZ[Eps/ZgpuqMHq#/_BJcD):q"sjSrS7>+
psAfapt()PU"n,Ppt>Gjpr<*?posOopo4%kppTt4prE0YpuD/@q#&YAJcD):q"sjSrS7>+psAfapt()P
U"n,Ppt>Gjpr<*?posOopo4%kppTt4prE0YpuD/@q#&YAJcD):q"sjSrS7>+psAfapt()PU"n,Ppt>Gj
pr<*?posOopo4%kppTt4prE0YpuD/@q#&YAJcD):q#1!\rTO1CptYYtptC;SU"n,Ppt>Gjpr<*?posOn
po4%kppTt3prE0YpuD/@q#&YAJcD):q#1!\rTO1CptYYtptC;SU"n,Ppt>Gjpr<*?posOnpo4%kppTt3
prE0YpuD/@q#&YAJcD):q#1!\rTO1CptYYtptC;SU"n,Ppt>Gjpr<*?posOnpo4%kppTt3prE0YpuD/@
q#&YAJcCc1q"t$_r:TjQJa/<]e*?_mpuM5*ps]#[pqcF3pqZ[Eps/ZgpuqMHq#/_BJcCc1q"t$_r:TjQ
Ja/<]e*?_mpuM5*ps]#[pqcF3pqZ[Eps/ZgpuqMHq#/_BJcCc1q"t$_r:TjQJa/<]e*?_mpuM5*ps]#[
pqcF3pqZ[Eps/ZgpuqMHq#/_BJcCH(rVcZmq"oX<O879#q"XXYq"+:LpuqM1pt,;gps&TZpsf)rq!@eM
q#8eCJcCH(rVcZmq"oX<O879#q"XXYq"+:LpuqM1pt,;gps&TZpsf)rq!@eMq#8eCJcCH(rVcZmq"oX<
O879#q"XXYq"+:LpuqM1pt,;gps&TZpsf)rq!@eMq#8eCJcC<$JcC<$\Gu@&q"jdYq!\"BpuD/*ptPT%
q!7_Lq#8eCJcC<$JcC<$\Gu@&q"jdYq!\"BpuD/*ptPT%q!7_Lq#8eCJcC<$JcC<$\Gu@&q"jdYq!\"B
puD/*ptPT%q!7_Lq#8eCJcC<$JcC<$VZ6Gjq#'p^q""4HpuqM;q!\"Qq#8eCJcC<$JcC<$VZ6Gjq#'p^
q""4HpuqM;q!\"Qq#8eCJcC<$JcC<$VZ6Gjq#'p^q""4HpuqM;q!\"Qq#8eCJcC<$JcC<$MuWSNq"jdZ
q"=FVq"sjceGk+"JcC<$JcCZ.q#1!aq"FLUq"OR\q#8eCJcC<$JcC<$MuWSNq"jdZq"=FVq"sjceGk+"
JcC<$JcC<$nGhtV_Z,2eJcC<$JcC<$nGhtV_Z,2eJcC<$JcC<$nGhtV_Z,2eJcC<$JcC<$TDsKBJcC<$
JcC<$TDsKBJcC<$JcC<$TDsE
~> %APLeod
EI
86 0 0 42 120 62 cm
BI
/Width 258
/Height 126
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcC<$JcC<$JcC<$qu;6IJcC<$JcC<$JcGWIJcC<$JcC<$JcC<$qu;6IJcC<$JcC<$JcGWIJcC<$JcC<$
JcC<$qu;6IJcC<$JcC<$JcGWIJcC<$JcC<$JcC<$qu;6IJcC<$JcC<$JcGWIJcC<$JcC<$JcC<$qu;6I
JcC<$JcC<$JcGWIJcC<$JcC<$JcC<$qu;6IJcC<$JcC<$JcGWIbQ%A9q"sj^q"XXXq"0./mIT<.q"=FV
Jbe4!q"sjbkPp,5JcGWIbQ%A9q"sj^q"XXXq"0./mIT<.q"=FVJbe4!q"sjbkPp,5JcGWIbQ%A9q"sj^
q"XXXq"0./mIT<.q"=FVJbe4!q"sjbkPp,5JcGWIeGo=Bq"a^Uq!Ik=pu(r%pt1/Kp=A3RptGN$pu[.m
kj%s2q"=FZnGe(>JcGWIeGo=Bq"a^Uq!Ik=pu(r%pt1/Kp=A3RptGN$pu[.mkj%s2q"=FZnGe(>JcGWI
eGo=Bq"a^Uq!Ik=pu(r%pt1/Kp=A3RptGN$pu[.mkj%s2q"=FZnGe(>JcGWIeGo=Aq"4@Fpttksps&TP
pqMBnp:^(2pq6C6pq?IDps]#lKA?7Upt>GtpuqMGq#1$gJcC<$qu>1Gq#'pZpuqM1pso/apr)sBJ\Ccj
o=aq3pq-=7prN6ZptCAUptGMrptYZ.q"=F\q>Z$GJcGWIeGo=Aq"4@Fpttksps&TPpqMBnp:^(2pq6C6
pq?IDps]#lKA?7Upt>GtpuqMGq#1$gJcC<$qu>1Gq#'pZpuqM1pso/apr)sBJ\Ccjo=aq0ppKn'pq?II
pt15Spt,;hpsAfkq!RqSq>Z$GJcGWIeGo=Aq"4@Fpttksps&TPpqMBnp:^(2ppp1-pp9b/ps&TdKA?7R
psSraptYZ4q"smeJcC<$qu>1Gq#'pZpuqM1pso/apr)sBJ\Ccjo=aq0ppKn'pq?IIpt15Spt,;hpsAfk
q!RqSq>Z$GJcGWIeGo=Bq"a^Tq!Ik=pu(r%pt1/Kp=AidpsJlXpqZ[Fpt#6$KBi6mptGMkpt>H-q"aac
JcC<$qu>1Gq#1!`q!n.Hpu_A0ptPSrJ_'PGo@E]aprN6GprE0\puI(mpuM5(psSrjq!.YMq>Z$GJcGWI
eGo=Bq"a^Tq!Ik=pu(r%pt1/Kp=AidpsJlXpqZ[Fpt#6$KBi6mptGMkpt>H-q"aacJcC<$qu=k>q#1!b
q"a^[q"FLTJb/:#oCMbDptkenpsf*"q"'.6q""4@pt,;pq!.YMq>Z$GJcGWIbQ%A9q"sj^q"XXXq"0./
mITr@q!@e4psJldpuM5AKDG<5puM5%ptGN.q"aacJcC<$qu=k>q#1!bq"a^[q"FLTJb/:#oCMbDptken
psf*"q"'.6q""4@pt,;pq!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWI
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YM
q>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`B
q!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'
q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$
oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$G
JcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'
q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YM
KE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]
q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWI
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YM
q>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`B
q!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'
q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$
oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$G
JcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'
q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YM
KE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]
q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWI
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YM
q>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`B
q!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'
q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$
oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$G
JcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'
q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YM
KE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]
q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWI
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YM
q>Z$GJcGWIJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$Gbl@/2aT)/;JcC<$oDeU]q!.>'q!.YM
KE(`Bq!.>'q!.YMq>Z$Gbl@/2aT)/;JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$Gbl@/2aT)/;
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z$GkPt>Uq"jdZq"=FVq"sjcgAh'MJcC<$oDeU]q!.>'
q!.YMKE(`Bq!.>'q!.YMq>Z$GkPt>Uq"jdZq"=FVq"sjcgAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'
q!.YMq>Z$GkPt>Uq"jdZq"=FVq"sjcgAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z'Hq#:'d
q"XXTq!@e>q!%SBq"XX`gAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z'Hq#:'dq"XXTq!@e>
q!%SBq"XX`gAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z'Hq#:'dq"XXTq!@e>q!%SBq"XX`
gAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z]Zq#1!aq"=FNq!%S6ptb`"pu(r5q"OR_gAh'M
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z]Zq#1!aq"=FNq!%S6ptb`"pu(r5q"OR_gAh'MJcC<$
oDeU]q!.>'q!.YMKE(`Bq!.>'q!.YMq>Z]Zq#1!aq"=FNq!%S6ptb`"pu(r5q"OR_gAh'MJcC<$oDeU]
q!.>'q!.YMKE(`Bq!.Y.pt,<%q""7VYPItgq"ORTq!\"ApttkupsJl^ps8`bpttl5q"OR_gAh'MJcC<$
oDeU]q!.>'q!.YMKE(`Bq!.Y.pt,<%q""7VYPItgq"ORTq!\"ApttkupsJl^ps8`bpttl5q"OR_gAh'M
JcC<$oDeU]q!.>'q!.YMKE(`Bq!.Y.pt,<%q""7VYPItgq"ORTq!\"ApttkupsJl^ps8`bpttl5q"OR_
gAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.Y-psSrkpuM89YNkoIpuM5*ps]#[pqcF3pqZ[Eps/ZgpuqMH
q#/qHqu;6IJcG?Aq"a^Mn(d^'q"]RBq"a^Mpt>GjptGN(q<G0Kq!%S7ptYYnprW<In%AG2pr<*SptGN,
q"FL]gAh'MJcC<$oDeU]q!.>'q!.YMKE(`Bq!.Y-psSrkpuM89YNkoIpuM5*ps]#[pqcF3pqZ[Eps/Zg
puqMHq#/qHqu;6IJcG?Aq"a^Mn(d^'q"]RBq"sjSptYYkpsSrhq:r1/pt>Gjpr<*?posOopo4%kppTt4
prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]RBq"sjSptYYkpsSrhq:r1/pt>Gjpr<*?posOopo4%k
ppTt4prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]RBq"sjSptYYkpsSrhq:r1/pt>Gjpr<*?posOo
po4%kppTt4prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]RBq#1!\puqM.pt>Grq:r1/pt>Gjpr<*?
posOnpo4%kppTt3prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]RBq#1!\puqM.pt>Grq:r1/pt>Gj
pr<*?posOnpo4%kppTt3prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]RBq#1!\puqM.pt>Grq:r1/
pt>Gjpr<*?posOnpo4%kppTt3prE0YpuD/@q#&kGqu;6IJcG?Aq"a^Mn(d^'q"]L@qZ$?fq"=FMkN]89
q!%S7ptYYnprW<In%AG2pr<*SptGN,q"FL]gAh'MJcC<$oDeU]q!.>'q!.YMJcGTHq"sjZq!R>1YNkoI
puM5*ps]#[pqcF3pqZ[Eps/ZgpuqMHq#/qHqu;6IJcG?Aq"a^Mn(d^'q"]L@qZ$?fq"=FMkN]89q!%S7
ptYYnprW<In%AG2pr<*SptGN,q"FL]gAh'MJcC<$oDeU]q!.>'q!.YMJcG9?q#1!bkP;=Wq"XXYq"+:L
puqM1pt,;gps&TZpsf)rq!@eMq#9"Iqu;6IJcG?Aq"a^Mn(d^'q"]L@nc/C_q"s7MYPItgq"ORTq!\"A
pttkupsJl]ps/Zapttl5q"OR_gAh'MJcC<$oDeU]q!.>'q!.YMJcG9?q#1!bkP;=Wq"XXYq"+:LpuqM1
pt,;gps&TZpsf)rq!@eMq#9"Iqu;6IJcG?Aq"a^Mn(d^'q"]L@`W)2&q#1!aq"=FNq!%S6ptb`"pu(r5
q"OR_gAh'MJcC<$oDeU]q!.>'q!.YMJcE^hPlLOWq"jdYq!\"BpuD/*ptPT%q!7_Lq#9"Iqu;6IJcG?A
q"a^Mn(d^'q"]L@`W)2&q#1!aq"=FNq!%S6ptb`"pu(r5q"OR_gAh'MJcC<$oDeU]q!.>'q!.YMJcE^h
K)bWFq#'p^q""4HpuqM;q!\"Qq#9"Iqu;6IJcG?Aq"a^Mn(d^'q"]L@`W(Piq#:'dq"XXTq!@e>q!%SB
q"XX`gAh'MJcC<$oDeU]q!.>'q!.YMJcE^hK)bWFq#'p^q""4HpuqM;q!\"Qq#9"Iqu;6IJcG?Aq"a^M
n(d^'q"]L@`W(MhkPt>Uq"jdZq"=FVq"sjcgAh'MJcC<$oDeU]q!.>'q!.YMJcE^hJcFp5q#1!aq"FLU
q"OR\q#9"Iqu;6IJcG?Aq"a^Mn(d^'q"]L@`W(MhkPt>Uq"jdZq"=FVq"sjcgAh'MJcC<$oDeU]q!.>'
q!.YMJcE^hJcEson,CE.qu;6IJcG?Aq"a^Mn(d^'q"]L@`W(Mhbl@/2aT)/;JcC<$oDeU]q!.>'q!.YM
JcE^hJcEson,CE.qu;6IJcG?Aq"a^Mn(d^'q"]L@`W(MhJcGWIJcC<$oDeU]q!.>'q!.YMJcE^hJcC<$
qu;6IJcG?Aq"a^Mn(d^'q"]L@`W(MhJcGWIJ,
~> %APLeod
EI
0.27885669 0.63458961 0.94468033 sc
CM
1 127 m
127 127 l
127 109 l
1 109 l
h
1 127 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 27 m
162 27 l
162 45 l
36 45 l
h
36 27 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
41 40 m
(!"#$%&)[ 8.003906 3.333984 3.996094 6.673828 6.673828 0.000000 ] xS
/Cs2 SC
1 0.63930082 0.37178266 sc
CM
1 108 m
127 108 l
127 90 l
1 90 l
h
1 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 46 m
162 46 l
162 64 l
36 64 l
h
36 46 m
S
/Cs1 SC
0 sc
0 i
41 59 m
('\(\)*+,-./.01*2.3)[ 2.666016 6.673828 3.333984 3.333984 3.333984 8.666016 7.330078 8.003906 9.333984 8.003906 8.666016 3.333984 3.333984 8.003906 8.003906 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1 91 m
127 91 l
127 73 l
1 73 l
h
1 91 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 63 m
162 63 l
162 81 l
36 81 l
h
36 63 m
S
/Cs1 SC
0 sc
0 i
41 76 m
(4#5\)*-.6-)[ 6.673828 3.996094 2.666016 3.333984 3.123047 7.330078 8.003906 8.003906 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1 73 m
127 73 l
127 55 l
1 55 l
h
1 73 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 81 m
162 81 l
162 99 l
36 99 l
h
36 81 m
S
/Cs1 SC
0 sc
0 i
41 94 m
(7"85\)*-.6-)[ 6.673828 3.333984 9.996094 2.666016 3.333984 3.123047 7.330078 8.003906 8.003906 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1 55 m
127 55 l
127 37 l
1 37 l
h
1 55 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 99 m
162 99 l
162 117 l
36 117 l
h
36 99 m
S
/Cs1 SC
0 sc
0 i
41 112 m
(95:\(\)*+,-./.0)[ 6.673828 2.666016 6.673828 6.673828 3.333984 3.333984 3.333984 8.666016 7.330078 8.003906 9.333984 8.003906 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1 37 m
127 37 l
127 19 l
1 19 l
h
1 37 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 117 m
162 117 l
162 135 l
36 135 l
h
36 117 m
S
/Cs1 SC
0 sc
0 i
41 130 m
(;":#:<=$>&?@:\)*0.AB)[ 6.000000 3.333984 6.673828 3.996094 6.673828 6.673828 6.673828 6.673828 6.000000 6.000000 6.000000 2.666016 6.673828 3.333984 3.333984 8.666016 8.003906 8.003906 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1 19 m
127 19 l
127 1 l
1 1 l
h
1 19 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
36 135 m
162 135 l
162 153 l
36 153 l
h
36 135 m
S
/Cs1 SC
0 sc
0 i
41 148 m
(%$C:<=$>&?@:\)*0.AB)[ 6.673828 6.673828 8.666016 6.673828 6.673828 6.673828 6.673828 6.000000 6.000000 6.000000 2.666016 6.673828 3.333984 3.333984 8.666016 8.003906 8.003906 0.000000 ] xS
/Cs2 SC
0.27885669 0.63458961 0.94468033 sc
CM
199 100 m
316 100 l
316 82 l
199 82 l
h
199 100 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
234 54 m
351 54 l
351 72 l
234 72 l
h
234 54 m
S
/Cs1 SC
0 sc
0 i
239 67 m
(B'%D')[ 6.673828 2.666016 6.673828 6.000000 0.000000 ] xS
/Cs2 SC
0.96804863 0.47229731 0.53965729 sc
CM
199 81 m
316 81 l
316 63 l
199 63 l
h
199 81 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
234 73 m
351 73 l
351 91 l
234 91 l
h
234 73 m
S
/Cs1 SC
0 sc
0 i
239 86 m
($\(<'\(\)*+,-./.0)[ 6.673828 6.673828 6.673828 2.666016 6.673828 3.333984 3.333984 3.333984 8.666016 7.330078 8.003906 9.333984 8.003906 0.000000 ] xS
/Cs2 SC
0.96804863 0.47229731 0.53965729 sc
CM
199 64 m
316 64 l
316 46 l
199 46 l
h
199 64 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 154 cm
234 90 m
351 90 l
351 108 l
234 108 l
h
234 90 m
S
/Cs1 SC
0 sc
0 i
239 103 m
(\($<'\(\)*+,-./.0)[ 6.673828 6.673828 6.673828 2.666016 6.673828 3.333984 3.333984 3.333984 8.666016 7.330078 8.003906 9.333984 8.003906 0.000000 ] xS
0 J
0 j
0.60000002 i
/Cs2 SC
0 0 0 sc
233.5 82 m
208 82 l
208 55 l
162 55 l
S
0 i
233.5 82 m
223.5 82 l
233.5 86 m
223.5 82 l
233.5 78 l
S
0.60000002 i
233.5 99 m
188 99 l
188 55 l
165.47368 55 l
S
0 i
233.5 99 m
223.5 99 l
233.5 103 m
223.5 99 l
233.5 95 l
S
ep
end
%%Trailer
%%EOF
